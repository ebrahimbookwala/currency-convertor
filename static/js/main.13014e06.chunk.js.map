{"version":3,"sources":["components/CurrencyInput.js","components/Spinner.js","components/TimeAgo.js","components/Button.js","components/DropDown.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencyInput","value","onChange","name","className","type","Spinner","TimeAgo","timeAgo","Button","text","onClick","DropDown","optionList","e","App","useState","currencyList","setCurrencyList","isLoading","setIsLoading","timeStamp","setTimeStamp","firstSum","firstCurrency","secondSum","secondCurrency","data","setData","fetchCurrencyData","a","fetch","response","ok","Error","status","json","formatData","prev","rates","date","console","log","message","useEffect","Object","keys","map","curr","addToData","convertedAmount","target","formatDistanceToNow","Date","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13014e06.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction CurrencyInput({ value, onChange, name }) {\r\n\treturn (\r\n\t\t<div className=\"from-currency-section currency-section\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tclassName=\"input-number\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tname={name}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CurrencyInput;\r\n","import React from \"react\";\r\n\r\nfunction Spinner() {\r\n\treturn <h1>Loading...</h1>;\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nfunction TimeAgo({ timeAgo }) {\r\n\treturn <p>Refreshed {timeAgo} ago</p>;\r\n}\r\n\r\nexport default TimeAgo;\r\n","import React from \"react\";\r\n\r\nfunction Button({ text, onClick }) {\r\n\treturn (\r\n\t\t<button className=\"refresh-div\" onClick={onClick}>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nfunction DropDown({ optionList, onChange, name }) {\r\n\tconst handleChange = (e) => {\r\n\t\tonChange(e, name);\r\n\t};\r\n\r\n\treturn <select onChange={handleChange}>{optionList}</select>;\r\n}\r\n\r\nexport default DropDown;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport CurrencyInput from \"./components/CurrencyInput\";\nimport Spinner from \"./components/Spinner\";\nimport TimeAgo from \"./components/TimeAgo\";\nimport Button from \"./components/Button\";\nimport DropDown from \"./components/DropDown\";\nimport { formatDistanceToNow } from \"date-fns\";\n\nconst API_KEY = \"9b20196ff6396d258febcfc5f97a1ba9\";\n\nfunction App() {\n\tconst [currencyList, setCurrencyList] = useState({});\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [timeStamp, setTimeStamp] = useState(\"\");\n\tconst [data, setData] = useState({\n\t\tfirstSum: 0,\n\t\tfirstCurrency: \"AED\",\n\t\tsecondSum: 0,\n\t\tsecondCurrency: \"AED\",\n\t});\n\n\tconst fetchCurrencyData = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://api.exchangeratesapi.io/v1/latest?access_key=${API_KEY}`\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`HTTP ERROR! status : ${response.status}`);\n\t\t\t}\n\t\t\tconst formatData = await response.json();\n\n\t\t\tsetIsLoading(false);\n\t\t\tsetCurrencyList((prev) => formatData.rates);\n\t\t\tsetTimeStamp(formatData.date);\n\t\t} catch (e) {\n\t\t\tconsole.log(\"There has been a problem. Pls try again.\" + e.message);\n\t\t\tsetIsLoading(true);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tfetchCurrencyData();\n\t}, [setIsLoading, setCurrencyList]);\n\n\tconst optionList = Object.keys(currencyList).map((curr) => (\n\t\t<option key={curr} value={curr}>\n\t\t\t{curr}\n\t\t</option>\n\t));\n\n\tconst addToData = (e, name) => {\n\t\tif (name === \"firstCurrency\") {\n\t\t\tconst convertedAmount =\n\t\t\t\t(data.firstSum / currencyList[e.target.value]) *\n\t\t\t\t\tcurrencyList[data.secondCurrency] || 0;\n\n\t\t\tsetData((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\t[name]: e.target.value,\n\t\t\t\tsecondSum: convertedAmount,\n\t\t\t}));\n\t\t} else if (name === \"secondCurrency\") {\n\t\t\tconst convertedAmount =\n\t\t\t\t(data.secondSum / currencyList[e.target.value]) *\n\t\t\t\t\tcurrencyList[data.firstCurrency] || 0;\n\n\t\t\tsetData((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\t[name]: e.target.value,\n\t\t\t\tfirstSum: convertedAmount,\n\t\t\t}));\n\t\t}\n\t};\n\n\tconst changeSecondSum = (e) => {\n\t\tconst amountEntered = e.target.value;\n\n\t\tconst convertedAmount =\n\t\t\t(amountEntered / currencyList[data.firstCurrency]) *\n\t\t\tcurrencyList[data.secondCurrency];\n\n\t\tsetData((prev) => ({\n\t\t\t...prev,\n\t\t\t[e.target.name]: e.target.value,\n\t\t\tsecondSum: convertedAmount,\n\t\t}));\n\t};\n\n\tconst changeFirstSum = (e) => {\n\t\tconst amountEntered = e.target.value;\n\n\t\tconst convertedAmount =\n\t\t\t(amountEntered / currencyList[data.secondCurrency]) *\n\t\t\tcurrencyList[data.firstCurrency];\n\n\t\tsetData((prev) => ({\n\t\t\t...prev,\n\t\t\t[e.target.name]: e.target.value,\n\t\t\tfirstSum: convertedAmount,\n\t\t}));\n\t};\n\n\tconst timeAgo = timeStamp && formatDistanceToNow(new Date(timeStamp));\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Live Currency Convertor</h1>\n\t\t\t</header>\n\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<section className=\"main-body\">\n\t\t\t\t\t<div className=\"first-section flex-section\">\n\t\t\t\t\t\t<CurrencyInput\n\t\t\t\t\t\t\tonChange={changeSecondSum}\n\t\t\t\t\t\t\tvalue={data.firstSum}\n\t\t\t\t\t\t\tname=\"firstSum\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DropDown\n\t\t\t\t\t\t\toptionList={optionList}\n\t\t\t\t\t\t\tonChange={addToData}\n\t\t\t\t\t\t\tname=\"firstCurrency\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"second-section flex-section\">\n\t\t\t\t\t\t<CurrencyInput\n\t\t\t\t\t\t\tonChange={changeFirstSum}\n\t\t\t\t\t\t\tvalue={data.secondSum}\n\t\t\t\t\t\t\tname=\"secondSum\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DropDown\n\t\t\t\t\t\t\toptionList={optionList}\n\t\t\t\t\t\t\tonChange={addToData}\n\t\t\t\t\t\t\tname=\"secondCurrency\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button onClick={() => fetchCurrencyData()} text=\"Refresh\" />\n\t\t\t\t\t\t<TimeAgo timeAgo={timeAgo} />\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}